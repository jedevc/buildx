#!/usr/bin/env bash

. $(dirname $0)/util
set -eu -o pipefail

: ${HTTP_PROXY=}
: ${HTTPS_PROXY=}
: ${NO_PROXY=}
: ${TEST_INTEGRATION=}
: ${TEST_REPORT_SUFFIX=}
: ${TEST_KEEP_CACHE=}

if [ "$#" == 0 ]; then TEST_INTEGRATION=1; fi

while test $# -gt 0; do
  case "$1" in
    integration)
      TEST_INTEGRATION=1
      ;;
    *)
      echo "unknown arg $1"
      ;;
  esac
  shift
done

iid="buildx-tests"

testReportsDir="$(pwd)/bin/testreports"
mkdir -p "$testReportsDir"
testReportsVol="-v $testReportsDir:/testreports"
gotestsumArgs="--format=standard-verbose --jsonfile=/testreports/go-test-report$TEST_REPORT_SUFFIX.json --junitfile=/testreports/junit-report$TEST_REPORT_SUFFIX.xml"
gotestArgs="-mod=vendor -coverprofile=/testreports/coverage-report$TEST_REPORT_SUFFIX.txt -covermode=atomic"

buildxCmd build $cacheFromFlags \
  --build-arg HTTP_PROXY \
  --build-arg HTTPS_PROXY \
  --build-arg NO_PROXY \
  --target "integration-test" \
  --output "type=docker,name=$iid" \
  $currentcontext

cacheVolume="buildx-test-cache"
if ! docker container inspect "$cacheVolume" >/dev/null 2>/dev/null; then
  docker create -v /root/.cache -v /root/.cache/registry -v /go/pkg/mod --name "$cacheVolume" alpine
fi

if [ "$TEST_INTEGRATION" == 1 ]; then
  socket=$(docker context inspect -f "{{.Endpoints.docker.Host}}")
  cid=$(docker create --rm -v ${socket#unix://}:/var/run/docker.sock -v /tmp $testReportsVol --volumes-from=$cacheVolume -e SKIP_INTEGRATION_TESTS -e GOTESTSUM_FORMAT -e BUILDKIT_REGISTRY_MIRROR_DIR=/root/.cache/registry --privileged $iid gotestsum $gotestsumArgs --packages="${TESTPKGS:-./...}" -- $gotestArgs ${TESTFLAGS:--v})
  docker start -a $cid
fi

if [ "$TEST_KEEP_CACHE" != "1" ]; then
  docker rm -v $cacheVolume
fi

